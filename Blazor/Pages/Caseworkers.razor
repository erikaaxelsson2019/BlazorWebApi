@page "/caseworkers"
@using  Blazor.Models
@inject HttpClient http


<h3>Handlägare</h3>

<div class="container">

    <div class="text-right">
        <button type="submit" class="btn btn-danger" @onclick="DeleteAllCaseworkers">Ta bort alla handlägare</button>
    </div>


    <EditForm class="my-5" Model="@caseworker" OnSubmit="@CreateCaseworker">
        <h5>Lägg till en ny handlägare</h5>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    <input type="text" class="form-control" placeholder="Förnamn.." @bind="caseworker.FirstName" />
                </div>
                <div class="col">
                    <input type="text" class="form-control" placeholder="Efternamn.." @bind="caseworker.LastName" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="text" class="form-control" placeholder="Email..." @bind="caseworker.Email" />
        </div>
        <div class="form-group">
            <input type="text" class="form-control" placeholder="Mobilnummer..." @bind="caseworker.Phone" />
        </div>

        <button type="submit" class="btn btn-success">Skapa handlägare</button>
    </EditForm>

    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Förnamn</th>
                <th scope="col">Efternamn</th>
                <th scope="col" colspan="2">Email</th>
                <th scope="col" colspan="2">Mobil</th>
            </tr>
        </thead>

        @if (caseworkers != null)
        {
            <tbody>

                @foreach (var caseworker in caseworkers)
                {
                <tr>
                    <th scope="row">@caseworker.Id</th>
                    <th>@caseworker.FirstName</th>
                    <th>@caseworker.LastName</th>
                    <th>@caseworker.Email</th>
                    <th>@caseworker.Phone</th>
                    <td class="text-center">
                        <span style="cursor: pointer" class="oi oi-trash" @onclick="() => DeleteCaseworker(caseworker.Id)"></span>
                    </td>
                </tr>
                }
            </tbody>
        }
    </table>

</div>

@code {

    private List<CaseworkerModel> caseworkers;
    private CaseworkerCreateModel caseworker;


    private async Task GetCaseworkers()
    {
        caseworkers = await http.GetJsonAsync<List<CaseworkerModel>>("http://localhost:62658/api/caseworkers");
        StateHasChanged();
    }

    private async Task CreateCaseworker()
    {
        await http.PostJsonAsync<CaseworkerCreateModel>("http://localhost:62658/api/caseworkers", caseworker);

        caseworker = new CaseworkerCreateModel();
        await GetCaseworkers();
    }

    private async Task DeleteAllCaseworkers()
    {
        await http.DeleteAsync("http://localhost:62658/api/caseworkers/all");
        await GetCaseworkers();
    }

    private async Task DeleteCaseworker(int id)
    {
        await http.DeleteAsync($"http://localhost:62658/api/caseworkers/{id}");
        await GetCaseworkers();
    }

    protected override async Task OnInitializedAsync()
    {
        caseworker = new CaseworkerCreateModel();
        await GetCaseworkers();
    }
}
